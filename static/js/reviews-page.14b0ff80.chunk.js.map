{"version":3,"sources":["component/Reviews/Reviews.module.css","component/ReviewsList/ReviewsList.jsx","component/Reviews/Reviews.jsx","component/Spinner/Spinner.module.css","component/Spinner/Spinner.jsx"],"names":["module","exports","ReviewsList","reviews","map","author","content","protoType","PropTypes","array","Reviews","state","error","isLoading","movieId","this","props","match","params","setState","apiServices","apiReviews","then","catch","finally","message","Spinner","length","className","styles","warning","Component","Spiner","Loader","type","color","height","width","timeout"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,QAAU,2B,mKCCtBC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,6BACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,+BACE,6BAAKD,IACL,4BAAIC,MAFGD,SASjBH,EAAYK,UAAY,CACtBJ,QAASK,IAAUC,OAGNP,Q,kBCwBAQ,E,4MApCbC,MAAQ,CACNR,QAAS,GACTS,MAAO,KACPC,WAAW,G,uDAGb,WAAqB,IAAD,OACVC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRC,KAAKI,SAAS,CAAEN,WAAW,IAE3BO,IACGC,WAAWP,GACXQ,MAAK,SAAAnB,GAAO,OAAI,EAAKgB,SAAS,CAAEhB,QAASA,OACzCoB,OAAM,SAAAX,GAAK,OAAI,EAAKO,SAASP,MAC7BY,SAAQ,kBAAM,EAAKL,SAAS,CAAEN,WAAW,S,oBAG9C,WAAU,IAAD,EAC+BE,KAAKJ,MAAnCR,EADD,EACCA,QAASS,EADV,EACUA,MAAOC,EADjB,EACiBA,UAExB,OACE,qCACGD,GAAS,+DAAkCA,EAAMa,WACjDZ,GAAa,cAACa,EAAA,EAAD,IACM,IAAnBvB,EAAQwB,OACP,mBAAGC,UAAWC,IAAOC,QAArB,yDAIA,cAAC,EAAD,CAAa3B,QAASA,W,GA9BV4B,c,mBCLtB/B,EAAOC,QAAU,CAAC,OAAS,0B,+GCgBZ+B,EAdA,WACb,OACE,qBAAKJ,UAAWC,IAAOI,OAAvB,SACE,cAAC,IAAD,CACEC,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS","file":"static/js/reviews-page.14b0ff80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"Reviews_warning__jM0N1\"};","import PropTypes from 'prop-types';\r\n\r\nconst ReviewsList = ({ reviews }) => {\r\n  return (\r\n    <ul>\r\n      {reviews.map(({ author, content }) => (\r\n        <li key={author}>\r\n          <h3>{author}</h3>\r\n          <p>{content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nReviewsList.protoType = {\r\n  reviews: PropTypes.array,\r\n};\r\n\r\nexport default ReviewsList;\r\n","import { Component } from 'react';\r\nimport apiServices from '../../services/api-services';\r\nimport Spinner from '../Spinner';\r\nimport ReviewsList from '../ReviewsList';\r\nimport styles from './Reviews.module.css';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n    error: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    this.setState({ isLoading: true });\r\n\r\n    apiServices\r\n      .apiReviews(movieId)\r\n      .then(reviews => this.setState({ reviews: reviews }))\r\n      .catch(error => this.setState(error))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { reviews, error, isLoading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\r\n        {isLoading && <Spinner />}\r\n        {reviews.length === 0 ? (\r\n          <p className={styles.warning}>\r\n            We don`t have any reviews for this movie =(\r\n          </p>\r\n        ) : (\r\n          <ReviewsList reviews={reviews} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3wLw1\"};","import Loader from 'react-loader-spinner';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spiner = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#3f51b5\"\r\n        height={50}\r\n        width={50}\r\n        timeout={5000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spiner;\r\n"],"sourceRoot":""}