{"version":3,"sources":["pages/HomePage.js","services/api-services.js","component/Spinner/Spinner.module.css","component/Spinner/Spinner.jsx","component/MoviesList/MoviesList.module.css","component/MoviesList/MoviesList.jsx"],"names":["HomePage","state","movies","error","isLoading","this","setState","apiServices","apiTrendMovies","then","catch","finally","message","className","Component","ApiKey","a","Axios","get","response","data","results","apiSearchMovie","query","apiDetails","movieId","apiCast","cast","api","apiReviews","module","exports","Spiner","styles","Loader","type","color","height","width","timeout","withRouter","location","movieList","map","title","id","poster_path","movieItem","movieItemLink","to","pathname","routes","from","movieCardImg","movieImg","src","alt","movieCardTitle"],"mappings":"iQAMqBA,E,4MACnBC,MAAQ,CACNC,OAAQ,GACRC,MAAO,KACPC,WAAW,G,uDAGb,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CAAEF,WAAW,IAE3BG,IACGC,iBACAC,MAAK,SAAAP,GAAM,OAAI,EAAKI,SAAS,CAAEJ,OAAQA,OACvCQ,OAAM,SAAAP,GAAK,OAAI,EAAKG,SAASH,MAC7BQ,SAAQ,kBAAM,EAAKL,SAAS,CAAEF,WAAW,S,oBAG9C,WAAU,IAAD,EAC8BC,KAAKJ,MAAlCC,EADD,EACCA,OAAQC,EADT,EACSA,MAAOC,EADhB,EACgBA,UAEvB,OACE,qCACGD,GAAS,+DAAkCA,EAAMS,WAClD,oBAAIC,UAAU,YAAd,4BACCT,GAAa,cAAC,IAAD,IACd,cAAC,IAAD,CAAYF,OAAQA,W,GAzBUY,c,8ECJhCC,EAAS,mCAETP,EAAc,uCAAG,sBAAAQ,EAAA,sEACRC,IAAMC,IAAN,kEACgDH,IAC3DN,MAAK,SAAAU,GAAQ,OAAIA,EAASC,KAAKC,WAHZ,mFAAH,qDAMdC,EAAc,uCAAG,WAAMC,GAAN,SAAAP,EAAA,sEACRC,IAAMC,IAAN,4DAC0CH,EAD1C,kBAC0DQ,EAD1D,+CAEXd,MAAK,SAAAU,GAAQ,OAAIA,EAASC,KAAKC,WAHZ,mFAAH,sDAMdG,EAAU,uCAAG,WAAMC,GAAN,SAAAT,EAAA,sEACJC,IAAMC,IAAN,6CAC2BO,EAD3B,oBAC8CV,EAD9C,oBAEXN,MAAK,SAAAU,GAAQ,OAAIA,EAASC,QAHX,mFAAH,sDAMVM,EAAO,uCAAG,WAAMD,GAAN,SAAAT,EAAA,sEACDC,IAAMC,IAAN,6CAC2BO,EAD3B,4BACsDV,EADtD,oBAEXN,MAAK,SAAAU,GAAQ,OAAIA,EAASC,KAAKO,QAHnB,mFAAH,sDAYPC,EAAM,CACVpB,iBACAc,iBACAE,aACAK,WAVc,uCAAG,WAAMJ,GAAN,SAAAT,EAAA,sEACJC,IAAMC,IAAN,6CAC2BO,EAD3B,4BACsDV,EADtD,2BAEXN,MAAK,SAAAU,GAAQ,OAAIA,EAASC,KAAKC,WAHhB,mFAAH,sDAWdK,WAEaE,O,mBCxCfE,EAAOC,QAAU,CAAC,OAAS,0B,+GCgBZC,EAdA,WACb,OACE,qBAAKnB,UAAWoB,IAAOC,OAAvB,SACE,cAAC,IAAD,CACEC,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,U,mBCVjBT,EAAOC,QAAU,CAAC,UAAY,8BAA8B,UAAY,8BAA8B,cAAgB,kCAAkC,SAAW,6BAA6B,eAAiB,qC,mHCwClMS,eApCI,SAAC,GAA0B,IAAxBtC,EAAuB,EAAvBA,OAAQuC,EAAe,EAAfA,SAC5B,OACE,oBAAI5B,UAAWoB,IAAOS,UAAtB,SACGxC,EAAOyC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,oBAAajC,UAAWoB,IAAOc,UAA/B,SACE,eAAC,IAAD,CACElC,UAAWoB,IAAOe,cAClBC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOjD,OAAZ,YAAsB2C,GAC9B5C,MAAO,CAAEmD,KAAMX,IAJnB,UAOE,sBAAK5B,UAAWoB,IAAOoB,aAAvB,UACG,IACAP,GACC,qBACEjC,UAAWoB,IAAOqB,SAClBC,IAAG,0CAAqCT,GACxCU,IAAKZ,OAKX,oBAAI/B,UAAWoB,IAAOwB,eAAtB,SAAuCb,QAnBlCC","file":"static/js/home-page.c6a64a48.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport apiServices from '../services/api-services';\r\n\r\nimport MoviesList from '../component/MoviesList';\r\nimport Spinner from '../component/Spinner';\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n    error: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    apiServices\r\n      .apiTrendMovies()\r\n      .then(movies => this.setState({ movies: movies }))\r\n      .catch(error => this.setState(error))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { movies, error, isLoading } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\r\n        <h1 className=\"mainTitle\">Trending today</h1>\r\n        {isLoading && <Spinner />}\r\n        <MoviesList movies={movies} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst ApiKey = 'bfc0b177c45bde411d6d53ddc48eee25';\r\n\r\nconst apiTrendMovies = async () => {\r\n  return await Axios.get(\r\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}`,\r\n  ).then(response => response.data.results);\r\n};\r\n\r\nconst apiSearchMovie = async query => {\r\n  return await Axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&query=${query}&language=en-US&page=1&include_adult=false`,\r\n  ).then(response => response.data.results);\r\n};\r\n\r\nconst apiDetails = async movieId => {\r\n  return await Axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${ApiKey}&language=en-US`,\r\n  ).then(response => response.data);\r\n};\r\n\r\nconst apiCast = async movieId => {\r\n  return await Axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${ApiKey}&language=en-US`,\r\n  ).then(response => response.data.cast);\r\n};\r\n\r\nconst apiReviews = async movieId => {\r\n  return await Axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${ApiKey}&language=en-US&page=1`,\r\n  ).then(response => response.data.results);\r\n};\r\n\r\nconst api = {\r\n  apiTrendMovies,\r\n  apiSearchMovie,\r\n  apiDetails,\r\n  apiReviews,\r\n  apiCast,\r\n};\r\nexport default api;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3wLw1\"};","import Loader from 'react-loader-spinner';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spiner = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#3f51b5\"\r\n        height={50}\r\n        width={50}\r\n        timeout={5000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spiner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieList\":\"MoviesList_movieList__36EPm\",\"movieItem\":\"MoviesList_movieItem__1QKdM\",\"movieItemLink\":\"MoviesList_movieItemLink__5ka13\",\"movieImg\":\"MoviesList_movieImg__30Tl0\",\"movieCardTitle\":\"MoviesList_movieCardTitle__3PTLV\"};","import { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routes from '../../routes';\r\nimport styles from './MoviesList.module.css';\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  return (\r\n    <ul className={styles.movieList}>\r\n      {movies.map(({ title, id, poster_path }) => (\r\n        <li key={id} className={styles.movieItem}>\r\n          <Link\r\n            className={styles.movieItemLink}\r\n            to={{\r\n              pathname: `${routes.movies}/${id}`,\r\n              state: { from: location },\r\n            }}\r\n          >\r\n            <div className={styles.movieCardImg}>\r\n              {' '}\r\n              {poster_path && (\r\n                <img\r\n                  className={styles.movieImg}\r\n                  src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\r\n                  alt={title}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <h2 className={styles.movieCardTitle}>{title}</h2>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array,\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n"],"sourceRoot":""}